<Page x:Class="Wpf.Views.TaskView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:vm="clr-namespace:Wpf.ViewModels"
      xmlns:vr="clr-namespace:Wpf.ValidationRules"
      xmlns:uc="clr-namespace:Wpf.UserControls"
      xmlns:conv="clr-namespace:PresentationLayer.Converter;assembly=PresentationLayer"
      xmlns:lang="clr-namespace:PresentationLayer.Translation;assembly=PresentationLayer"  
      xmlns:behaviors="clr-namespace:Wpf.Behaviors"
      xmlns:triggers="clr-namespace:Wpf.Triggers"
      xmlns:b="clr-namespace:Microsoft.Xaml.Behaviors;assembly=Microsoft.Xaml.Behaviors"
      mc:Ignorable="d"
      d:DesignHeight="450" d:DesignWidth="800">

    <Page.DataContext>
        <vm:TaskViewModel />
    </Page.DataContext>

    <Page.Resources>
        <conv:DueDateToColorConverter x:Key="DueDateToColorConverter" />
        <conv:DateTimeToStringConverter x:Key="DateTimeToStringConverter" />
        <conv:ModelStateToIconConverter x:Key="ModelStateToIconConverter" />

        <!--<Style x:Key="textBoxInError" TargetType="TextBox">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
              Value="{Binding RelativeSource={x:Static RelativeSource.Self},
              Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>-->
    </Page.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="10" />
            <RowDefinition Height="*" MaxHeight="217" />
            <RowDefinition Height="30" />
        </Grid.RowDefinitions>

        <!--Popup affichant les messages métier-->
        <Popup IsOpen="{Binding IsBusinessMessageVisible, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
               AllowsTransparency="True"  PopupAnimation="Slide" Placement="Center">
            <uc:BusinessMessageUC BusinessMessage="{Binding BusinessMessage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                IsBusinessMessageVisible="{Binding IsBusinessMessageVisible, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
        </Popup>

        <!--Liste des tâches-->
        <ScrollViewer Grid.Row="0"  VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
            <ListView ItemsSource="{Binding Tasks, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding SelectedTask, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsSynchronizedWithCurrentItem="True">
                <ListView.View>
                    <GridView>
                        <GridView.Columns>
                            <GridViewColumn Header="{x:Static lang:Lang.TaskId}" Width="35">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Name="PART_Id" Text="{Binding Path=Id, Mode=TwoWay}" Style="{StaticResource ListViewTextBlockNum}"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="{x:Static lang:Lang.TaskName}" Width="100">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Name="PART_Name" Text="{Binding Path=Name, Mode=TwoWay}"
                                                 IsEnabled="{Binding Path=IsEnabled}"
                                                 Style="{StaticResource ListViewTextBoxText}"  />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="{x:Static lang:Lang.TaskDescription}" Width="150">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Name="PART_Description" Text="{Binding Path=Description, Mode=TwoWay}"
                                                 IsEnabled="{Binding Path=IsEnabled}"
                                                 Style="{StaticResource ListViewTextBoxText}"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="{x:Static lang:Lang.TaskDueDate}" Width="100">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Text="{Binding DueDate, UpdateSourceTrigger=LostFocus, Converter={StaticResource DateTimeToStringConverter}, ConverterParameter=dd/MM/yyyy}"
                                                 IsEnabled="{Binding Path=IsEnabled}"
                                                 Style="{StaticResource ListViewTextBoxDate}"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="{x:Static lang:Lang.TaskResolutionPercent}" Width="150">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <ScrollBar Name="ResolutionPercent" Orientation="Horizontal" Maximum="100" LargeChange="10" SmallChange="1" Value="{Binding ResolutionPercent, Mode=TwoWay}" Width="100"
                                                       IsEnabled="{Binding Path=IsEnabled}" />
                                            <TextBlock Name="ValueResolutionPercent" Text="{Binding ElementName=ResolutionPercent, Path=Value, StringFormat='\{0} %'}"
                                                       Style="{StaticResource ListViewTextBlockNum}" Width="35" />
                                        </StackPanel>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="{x:Static lang:Lang.TaskIsAlert}" Width="20">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Background="{Binding DueDate, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource DueDateToColorConverter}}"
                                                   IsEnabled="{Binding Path=IsEnabled}"
                                                   Style="{StaticResource ListViewTextBlockNum}" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="{x:Static lang:Lang.TaskIsReminder}" Width="70">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <CheckBox IsChecked="{Binding Path=IsReminder, Mode=TwoWay}"
                                                  IsEnabled="{Binding Path=IsEnabled}"
                                                  Style="{StaticResource ListViewCheckBox}" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="{x:Static lang:Lang.TaskIsFavorite}" Width="70">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <CheckBox IsChecked="{Binding Path=IsFavorite, Mode=TwoWay}"
                                                  IsEnabled="{Binding Path=IsEnabled}"
                                                  Style="{StaticResource ListViewCheckBox}" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="{x:Static lang:Lang.TaskIsClosed}" Width="70">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <CheckBox IsChecked="{Binding Path=IsClosed, Mode=TwoWay}"
                                                  IsEnabled="{Binding Path=IsEnabled}"
                                                  Style="{StaticResource ListViewCheckBox}" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="{x:Static lang:Lang.TaskState}" Width="70">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <Image Source="{Binding Path=State, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ModelStateToIconConverter}}" Style="{StaticResource ListViewImage}" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                        </GridView.Columns>
                    </GridView>
                </ListView.View>
            </ListView>
        </ScrollViewer>

        <!--Splitter-->
        <GridSplitter Grid.Row="1" />

        <!--Détail de la tâche-->
        <ScrollViewer Grid.Row="2" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
            <StackPanel Style="{StaticResource StackPanelForm}">
                <Border Style="{StaticResource BorderForm}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>

                        <Label Grid.Row="0" Grid.Column="0" Content="{x:Static lang:Lang.TaskId}" Style="{StaticResource LabelForm}" />
                        <Label Grid.Row="1" Grid.Column="0" Content="{x:Static lang:Lang.TaskName}" Style="{StaticResource LabelForm}" />
                        <Label Grid.Row="2" Grid.Column="0" Content="{x:Static lang:Lang.TaskDescription}" Style="{StaticResource LabelForm}" />
                        <Label Grid.Row="3" Grid.Column="0" Content="{x:Static lang:Lang.TaskDueDate}" Style="{StaticResource LabelForm}" />
                        <Label Grid.Row="4" Grid.Column="0" Content="{x:Static lang:Lang.TaskResolutionPercent}" Style="{StaticResource LabelForm}" />
                        <Label Grid.Row="5" Grid.Column="0" Content="{x:Static lang:Lang.TaskIsReminder}" Style="{StaticResource LabelForm}" />
                        <Label Grid.Row="6" Grid.Column="0" Content="{x:Static lang:Lang.TaskIsFavorite}" Style="{StaticResource LabelForm}" />
                        <Label Grid.Row="7" Grid.Column="0" Content="{x:Static lang:Lang.TaskIsClosed}" Style="{StaticResource LabelForm}" />

                        <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding SelectedTask.Id, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True" IsEnabled="False" />
                        <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding SelectedTask.Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            <b:Interaction.Behaviors>
                                <behaviors:SelectTextOnFocusBehavior />
                            </b:Interaction.Behaviors>
                        </TextBox>
                        <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding SelectedTask.Description, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            <b:Interaction.Triggers>
                                <b:EventTrigger EventName="GotFocus">
                                    <triggers:SelectTextOnFocusTrigger />
                                </b:EventTrigger>
                            </b:Interaction.Triggers>
                        </TextBox>
                        <TextBox Grid.Row="3" Grid.Column="1" Text="{Binding SelectedTask.DueDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, 
                            Converter={StaticResource DateTimeToStringConverter}, ConverterParameter=dd/MM/yyyy, ValidatesOnExceptions=True}" />

                        <TextBox Grid.Row="3" Grid.Column="1" >
                            <TextBox.Text>
                                <Binding Path="SelectedTask.DueDate" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"
                                         Converter="{StaticResource DateTimeToStringConverter}" ConverterParameter="dd/MM/yyyy" NotifyOnValidationError="True">
                                <Binding.ValidationRules>
                                    <vr:DueDateValidation DateMin="01/01/2022" />
                                </Binding.ValidationRules>
                            </Binding>
                            </TextBox.Text>
                        </TextBox>
                            
                        <!--<TextBox.Text #region>
                                <Binding Path="SelectedTask.DueDate" Mode="TwoWay" UpdateSourceTrigger="LostFocus" NotifyOnValidationError="True">
                                    <Binding.ValidationRules>
                                        -->
                        <!--<ExceptionValidationRule />-->
                        <!--
                                        <vr:DueDateValidation DateMin="01/01/2000" />
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>-->

                        <TextBox Grid.Row="4" Grid.Column="1" Text="{Binding SelectedTask.ResolutionPercent, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Grid.Row="5" Grid.Column="1" IsChecked="{Binding SelectedTask.IsReminder, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Grid.Row="6" Grid.Column="1" IsChecked="{Binding SelectedTask.IsFavorite, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Grid.Row="7" Grid.Column="1" IsChecked="{Binding SelectedTask.IsClosed, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </Grid>
                </Border>
            </StackPanel>
        </ScrollViewer>

        <!--Actions-->
        <StackPanel Grid.Row="4" Orientation="Horizontal" HorizontalAlignment="Right">
            <Button Content="{x:Static lang:Lang.CommandInsert}" Command="{Binding InsertCommand}" Style="{StaticResource ButtonSubmit}" />
            <Button Content="{x:Static lang:Lang.CommandDelete}" Command="{Binding DeleteCommand}" Style="{StaticResource ButtonSubmit}" />
            <Button Content="{x:Static lang:Lang.CommandCancel}" Command="{Binding CancelCommand}" Style="{StaticResource ButtonCancel}" />
            <Button Content="{x:Static lang:Lang.CommandSave}" Command="{Binding SaveCommand}" Style="{StaticResource ButtonSubmit}" />
            <Button Content="{x:Static lang:Lang.CommandRefresh}" Command="{Binding RefreshCommand}" Style="{StaticResource ButtonCancel}" />
        </StackPanel>

    </Grid>

</Page>
